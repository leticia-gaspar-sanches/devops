name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Test application
      run: |
        python -m pytest tests/ -v

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/hello-devops:latest
          ${{ secrets.DOCKER_USERNAME }}/hello-devops:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
    
    - name: Update and run job
      run: |
        # Remove job anterior se existir
        kubectl delete job hello-devops-job --ignore-not-found=true
        # Aplica novo job com imagem atualizada
        sed -i "s|hello-devops:latest|${{ secrets.DOCKER_USERNAME }}/hello-devops:${{ github.sha }}|g" k8s/job.yaml
        kubectl apply -f k8s/job.yaml
    
    - name: Wait for job completion
      run: |
        kubectl wait --for=condition=complete --timeout=300s job/hello-devops-job
    
    - name: Show job logs
      run: |
        kubectl logs job/hello-devops-job